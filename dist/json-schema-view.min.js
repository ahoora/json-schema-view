/*!
 * json-schema-view
 * https://github.com/mohsen1/json-schema-view
 * Version: 0.3.5 - 2014-10-13T00:09:13.116Z
 * License: MIT
 */
"use strict";var module=angular.module("mohsen1.json-schema-view",["RecursionHelper"]);module.directive("jsonSchemaView",function(e){function s(e){e.isCollapsed=!1,e.isArray=e.schema&&"array"===e.schema.type,e.isPrimitive=e.schema&&!e.schema.properties&&!e.schema.items&&"array"!==e.schema.type&&"object"!==e.schema.type,e.toggle=function(){e.isCollapsed=!e.isCollapsed},e.isRequired=function(s){var a=e.$parent.schema;return a&&Array.isArray(a.required)&&s.name?a.required.indexOf(s.name)>-1:!1}}return{restrict:"E",templateUrl:"json-schema-view.html",replcae:!0,scope:{schema:"="},compile:function(a){return e.compile(a,s)}}}),angular.module("RecursionHelper",[]).factory("RecursionHelper",["$compile",function(e){return{compile:function(s,a){angular.isFunction(a)&&(a={post:a});var i,n=s.contents().remove();return{pre:a&&a.pre?a.pre:null,post:function(s,r){i||(i=e(n)),i(s,function(e){r.append(e)}),a&&a.post&&a.post.apply(null,arguments)}}}}}]),angular.module("mohsen1.json-schema-view").run(["$templateCache",function(e){e.put("json-schema-view.html",'<div class="json-schema-view" ng-class="{collapsed: isCollapsed}"><span class="primitive" ng-if="isPrimitive"><span class="type">{{schema.type}}</span> <span class="required" ng-if="isRequired(schema)">*</span> <span class="format" ng-if="!isCollapsed && schema.format">({{schema.format}})</span> <span class="range minimum" ng-if="!isCollapsed && schema.minimum">minimum:{{schema.minimum}}</span> <span class="range maximum" ng-if="!isCollapsed && schema.maximum">maximum:{{schema.maximum}}</span></span> <a class="toggler" ng-click="toggle()" ng-if="!isPrimitive"></a> <span class="title" ng-click="toggle()"><span ng-if="isArray" class="array-of">[</span> {{schema.title}}</span> <span class="opening brace" ng-if="!isPrimitive">{</span><div class="description">{{schema.description}}</div><div class="property" ng-repeat="(propertyName, property) in schema.properties"><span class="name">{{propertyName}}:</span><json-schema-view schema="property"></json-schema-view></div><span class="closeing brace" ng-if="!isPrimitive">}</span> <span ng-if="isArray" class="array-of">]</span></div>')}]);